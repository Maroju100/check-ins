name: Gradle Build - Feature / Bug
on:
  push:
    branches:
      - 'feature-**/*'
      - 'bugfix-**/*'
      - 'chore-**/*'
      - 'doc-**/*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      #- name: Gradle package
      #  run: ./gradlew assemble
      #- name: Gradle runs tests
      #  run: ./gradlew check
      - name: Do SonarQube checks
       #run: ./gradlew sonarqube -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG -Dsonar.host.url=$SONAR_URL -Dsonar.login=$TOKEN
        run: ./gradlew sonarqube -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_URL -Dsonar.login=$TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #SONAR_PROJECT_KEY: oci-labs_oci-checkins
          SONAR_PROJECT_KEY: oci-checkins
          #SONAR_ORG: oci-labs
          #SONAR_URL: https://sonarcloud.io
          SONAR_URL: https://sonarqube.cloudops.objectcomputing.com
          #SONAR_TOKEN: 76d54e72c4fbab6a5d7928cc95e2e9248986b1c5
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      - name: capture sonar result status
        run: echo ::set-output name=result::$(curl -u "${SONAR_TOKEN}:" https://sonarqube.cloudops.objectcomputing.com/api/qualitygates/project_status?projectKey=$SONAR_PROJECT_KEY | jq '.projectStatus.status')
        id: curlSonar
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_PROJECT_KEY: oci-checkins
      - name: sanity check output
        run: echo $steps.curlSOnar.outputs.result
      - name: fail if sonar result bad
        if: steps.curlSonar.outputs.result != 'OK'
        run: exit 1